 - 3D page
 - Firebug
 - https://replit.com/HENRYBUCZKIEWIC/Bookmarklets
 - Starred items in GH
 - https://github.com/stars/py660/lists/bookmarklets
LIST:
SnowLord DevTools: javascript:(function()%7B(function()%20%7Bvar%20x%20%3D%20document.createElement(%22script%22)%3Bx.src%20%3D%20%22https%3A%2F%2Fcdn.jsdelivr.net%2Fgh%2FSnowLord7%2Fdevconsole%40master%2Fmain.js%22%3Bx.onload%20%3D%20alert(%22Loaded%20Developer%20Console!%22)%3Bdocument.head.appendChild(x)%3B%7D)()%7D)()
Dyslexia: javascript: (function() {  window.__glitch_runs = window.__glitch_runs ? window.__glitch_runs + 1 : 1;  const MODES = {    STANDARD: %27STANDARD%27,    TURBO: %27TURBO%27  };  const OPTIONS = Object.assign(    { G_T: false, G_I: true, TURBO: false },    {G_T:true} || {}  );  const GLITCH_TEXT = OPTIONS.G_T;  const GLITCH_IMAGES = OPTIONS.G_I;  const MODE = OPTIONS.TURBO ? MODES.TURBO : MODES.STANDARD;  if (MODE === MODES.TURBO) {    window.__glitch_runs = 3;  }  const transformTranspose = (header, input, gap = 1) => {    const idx =      header + Math.floor(Math.random() * (input.length - header - gap));    const tmp = input[idx];    input[idx] = input[idx + gap];    input[idx + gap] = tmp;    return input;  };  const transformSubstitute = (header, input) => {    const by = Math.floor(Math.random() * 256);    const idx = header + Math.floor(Math.random() * (input.length - header));    input[idx] = by;    return input;  };  const transformText = str => {    let bytes = new TextEncoder(%27utf-8%27).encode(str);    const errors = Math.random() * (0.05 * str.length);    for (let i = 0; i < errors; i += 1) {      bytes =        Math.random() > 0.5          ? transformSubstitute(0, bytes)          : transformTranspose(            0,            bytes,            Math.floor(Math.random() * str.length - 1) + 1          );    }    const string = new TextDecoder(%27utf-8%27).decode(bytes);    return string;  };  const glitchImage = image => {    try {      image.onload = () => {};      image.style.backgroundColor = %27#262626';      const canvas = document.createElement('canvas');      const context = canvas.getContext('2d');      canvas.width = image.naturalWidth;      canvas.height = image.naturalHeight;      context.drawImage(image, 0, 0);      const data = canvas.toBlob(blob => {        const fileReader = new FileReader();        fileReader.onload = event => {          const data =            blob.size === event.target.result.byteLength              ? new Uint8Array(event.target.result)              : null;          image.onerror = () => {            image.src = URL.createObjectURL(blob);          };          const glitchOnce = () => {            const errors = Math.random() * 10 * window.__glitch_runs;            let corrupted = data.slice(0);            for (let i = 0; i < errors; i++) {              corrupted =                Math.random() > 0.5                  ? transformTranspose(100, corrupted)                  : transformSubstitute(100, corrupted);            }            const corruptBlob = new Blob([corrupted], { type: 'image/png' });            const corruptSrc = URL.createObjectURL(corruptBlob);            image.src = corruptSrc;          };          const glitchImageRaf = () => {            glitchOnce();            window.requestAnimationFrame(glitchImageRaf);          };          const glitchImageTimeout = (max = 300) => {            glitchOnce();            window.setTimeout(() => {              glitchImageTimeout(max);            }, Math.random() * max / 2 + Math.random() * max / 2);          };          if (MODE === MODES.STANDARD) {            glitchImageTimeout();          } else if (MODE === MODES.TURBO) {            glitchImageRaf();          }        };        fileReader.readAsArrayBuffer(blob);      }, 'image/jpeg');    } catch (e) {      return false;    }  };  const glitchText = n => {    const original = n.textContent;    const glitchText = () => {      n.textContent = transformText(original).replace(/ï¿½/g, '');    };    const glitchTextTimeout = (max = 1000) => {      glitchText();      window.setTimeout(() => {        glitchTextTimeout(max);      }, Math.random() * max / 2 + Math.random() * max / 2);    };    const glitchTextRaf = () => {      glitchText();      window.requestAnimationFrame(glitchTextRaf);    };    glitchTextTimeout();  };  const textNodesUnder = el => {    let n;    const a = [];    const walk = document.createTreeWalker(      el,      NodeFilter.SHOW_TEXT,      null,      false    );    while ((n = walk.nextNode())) {      a.push(n);    }    return a;  };  const setupGlitch = () => {    if (GLITCH_IMAGES) {      const images = document.querySelectorAll('img');      images.forEach(i => {        i.complete          ? glitchImage(i)          : (i.onload = event => glitchImage(event.target));      });    }    if (GLITCH_TEXT) {      const textNodes = textNodesUnder(document.body).filter(        n => n.textContent && n.textContent.length > 0 && n.textContent.trim()      );      textNodes.forEach(glitchText);    }  };  if (document.readyState === 'complete') {    setupGlitch();  } else {    document.body.addEventListener('load', setupGlitch);  }})();
Rainbow Screen: javascript:function a(e){var n=e.childNodes;for(var i in n){a(n[i]);if(n[i].style) n[i].style.backgroundImage="url(http://bgreco.net/rainbowbg.gif)";}};a(document);
Tilting Device: javascript:(function(){['', '-ms-', '-webkit-', '-o-', '-moz-'].map(function(prefix){Array.prototype.slice.call(document.querySelectorAll('div,p,span,img,a,body')).map(function(el){el.style[prefix + 'transform'] = 'rotate(' + (Math.floor(Math.random() * 3) - 1) + 'deg)';});});}())
Editer: javascript: if(document.body.contentEditable !== 'true') {    document.body.contentEditable = 'true'; document.designMode='on';alert("edit mode activated"); void 0} else {    document.body.contentEditable = 'false'; document.designMode='off';alert("edit mode deactivated"); void 0}
Star Wars Intro: javascript:(function(c){var a=c.body.style;c.documentElement.style.background=a.background='black';a.color='yellow';a.height=a.width='100%';a.position='fixed';a.overflowY='scroll';a.top='-15%';a.webkitTransform=a.MozTransform=a.transform='matrix3d(1,0,0,0,0,1,0,-0.0015,0,0,1,0,0,0,0,1)';for(var a=c.body.children,b=0;b<a.length;b++)'SCRIPT'!=a[b].nodeName&&(a[b].style.overflowY='scroll',a[b].style.maxHeight='100%');var b=new Audio();b.src='https://archive.org/download/StarWarsThemeSongByJohnWilliams/Star Wars Theme Song By John Williams.mp3';var f=function(){for(var a,b=0;a=c.body.children[b];b++)'SCRIPT'!=a.nodeName&&(a.scrollTop+=2);setTimeout(f,50)};setTimeout(f,1000);b.load();b.play()})(document)
Make It Snow: javascript: (function() {    var letter = prompt('What letter?%27);    var color = prompt(%27What color?%27);    var container = document.createElement(%27div%27);    document.body.appendChild(container);    container.style.position = %27fixed%27;    container.style.top = %270%27;    container.style.left = %270%27;    container.style.width = %27100%%27;    container.style.height = %27100%%27;    container.style.overflow = %27hidden%27;    container.style.pointerEvents = %27none%27;    function init() {        var injection = document.createElement(%27style%27);        document.body.appendChild(injection);        injection.innerHTML = %27@-webkit-keyframes snow {\nfrom {top:-1%;}\nto{top:121%;}}\n@-moz-keyframes snow {\nfrom {top: -1%;}\nto {top: 121%;}\n}%27;    }    init();    window.setInterval(createParticle, 200);    timeChoices = [5, 6, 7, 8, 9, 10];    function destroy(evt) {        container.removeChild(evt.target);    }    function createParticle() {        var particle = document.createElement(%27span%27);        var randomSpeed = timeChoices[Math.floor(Math.random() * timeChoices.length)];        particle.innerHTML = letter;        particle.className = %27flake%27;        particle.style.position = %27absolute%27;        particle.style.color = color;        particle.style.backgroundColor = %27transparent%27;        particle.style.width = %275px%27;        particle.style.height = %275px%27;        particle.style.pointerEvents = %27none%27;        particle.style.right = Math.random() * 100 + %27%%27;        particle.style.borderRadius = %2750%%27;        particle.style.WebkitAnimation = %27snow %27 + randomSpeed + %27s linear%27;         particle.style.MozAnimation = %27snow %27 + randomSpeed + %27s linear%27;        container.appendChild(particle);        particle.addEventListener(%27webkitAnimationEnd%27, destroy);         particle.addEventListener(%27AnimationEnd%27, destroy);    }})()
Snake: javascript:for(Q=64,m=b=Q*Q,a=[P=l=u=d=p=S=w=0],u=89,f=(h=j=t=(b+Q)/2)-1,(B=(D=document).body).appendChild(x=D.createElement('p')),(X=x.style).position='fixed',X.left=X.top=0,X.background='#FFF',x.innerHTML='%3Cp%3E%3C/p%3E%3Ccanvas%3E',v=(s=x.childNodes)[0],(s=s[1]).width=s.height=Q*5,c=s.getContext('2d'),onkeydown=onblur=F=function(e,z){z?a[f]?(w+=m,f=Math.random(l+=8)*(R=Q-2)*R|(u=0),F(f+=Q+1+(f/R|0)*2,z)):F(f):e%3C0?(l?--l:(y=t,t=a[t]-2,F(y)),S+=(w*=.8)/4,m=999/(u+++10),a[h+=[-1,-Q,1,Q][d=p]]?B.removeChild(x,alert('Game%20Over')):(F(h),F(e,j=h),v.innerHTML=P?(setTimeout(F,50,e,0),S|0):'Press%20P')):-e?(y=(a[e]=e%3CQ|e%3E=Q*Q-Q|!(e%Q)|e%Q==Q-1|(e==h)*2)+(e==f),e==h&&(a[j]=2+h),c.fillStyle='hsl('+!a[e]*99+','+m*2+'%,'+y*50+'%)',c.fillRect(e%Q*5,(e/Q|0)*5,5,5)):isNaN(y=e.keyCode-37)|y==43?(P=y&&!P)&&F(-1):p=!P|y&-4|!(y^2^d)?p:y;return!1};--b;F(b));void%20F(-1)
